notes on PoseCamTox development
jerry isdale, starting here 19 August 2025

This folder is a refactoring of the Pose2Art touchDesigner projects of 2023 etc
It is sibling of the new poseCamPC project/git - the app that reads webcam/file
sending osc and ndi skeleton date

Starting with a basic folder structure and scripts/docs generated with help of ChatGPT
(or maybe me helping it)

for reference the osc_trackhands.toe from 2023 is here. It works when poseCamPC is in osc legacy mode.

at this point, the poseCam_Dev.toe is a blank TD project.
first step will be to get it all into git. ... maybe github.
then wire up the scripts per docs/WIRING.md
---

using a flat structure but in initial commit there is a td folder with contents
likely this wll be removed shortly.

git init
git add .
git status (check what happened)
git commit -m "initial commit"
---
initial startup operator training issues with the Toe creation. 
trying to keep the WIRING.md up to date with details.

using ChatGPT to answer questions as i go thru, it does a fair job. 
Lots of my queestions though are because the initial diretions were unclear when faced 
with reality of the TouchDeisgner UI.

variety of changes to the pose_fantout.py to properly load landmarks etc

---
20 aug working thru tox 
realize the output of OnePerson Select CHOP would be the channels with p# stripped, and only have one person per the SelectPersonID
This may simplify the PoseEfx and the Landmark Select, as they only need to look for the landmark name/id
Perhaps the landmark channels should retain their base id in the name (eg 20_handtip_r = id_name)

chat kinda works but gets details wrong or left output
as building PoseEffect_MASTER COMP with internal LandmarkSelect COMP and fxCore etc
often  Chat's guide du jour gets basic architecture right but details wrong/left out
Such as details on how to add an Extension to a COMP
i repeatedly asked chat to elaborate or redo its plan doc, 
some of these are saved in ./docs/*.md

21 August
as I build these out, the question of the contents of the LandmarkSelectMenu looms
The menu is used in LandmarkSelect comp buried in each PoseEffect_MASTER
Current design was not really thinking of the replication/copy aspect
so i prompted:

the project root (poseCamTox_dev) is an example of the use of poseCamTox.  The PoseCam Comp reads the OSC/NDI and feeds them to the PoseEfxSwitch. That component has one or more PoseEffect instances (derived from PoseEffectMaster), and a switch interface that defines which PoseEffect is active and whose output TOP is streamed to its OutTop.  So perhaps the best location for the LandmarkFilterMenu_csv would be in PoseEfxSwitch Comp, which is the parent of all PoseEffect (including Master tox?).  Lets review the full architecture of this PoseEfxSwitch Comp with idea of a) being part of reusable Pose2Art architecture b) getting something done asap so we can build out a few PoseEffect_* with their specific fxCore. to demo the whole thing.

this kinda rearchitects the whole PoseEfxSwitch
so now have revised PoseEfxSwitch Architecture Rev 21 Aug
which gets updated now on rev c+.

as I go thru implementing by the guides, i note things that are odd and 
likely need updating, perhaps at higher level or lower in code/network.
I'll try to keep the Architecture doc up to date but like need an as-built pass
---
4pm 21 aug... almost have it but apparently the parameters are incorrect

---
getting vscode hooked up to touchDesigner
per Chat instructions

chat said to set DAT preferences Text Editor to
code --reuse-window --goto "$path:$line"
i tried and failed with :
C:/Users/isdal/AppData/Local/Programs/Microsoft VS Code/Code.exe --reuse-window --goto "$path:$line"
original was 
C:/Users/isdal/AppData/Local/Programs/Microsoft VS Code/Code.exe

just set it back
---
almost there 730p
