notes on PoseCamTox development
jerry isdale, starting here 19 August 2025

This folder is a refactoring of the Pose2Art touchDesigner projects of 2023 etc
It is sibling of the new poseCamPC project/git - the app that reads webcam/file
sending osc and ndi skeleton date

Starting with a basic folder structure and scripts/docs generated with help of ChatGPT
(or maybe me helping it)

for reference the osc_trackhands.toe from 2023 is here. It works when poseCamPC is in osc legacy mode.

at this point, the poseCam_Dev.toe is a blank TD project.
first step will be to get it all into git. ... maybe github.
then wire up the scripts per docs/WIRING.md
---
this notes.txt file and a series of md files ./docs are included in the git
some of the md files are used by the td project as external files
some are outputs of the Chat as the project evolves, these will be deleted and live on only in the git repo once done or outdated

---

using a flat structure but in initial commit there is a td folder with contents
likely this wll be removed shortly.

git init
git add .
git status (check what happened)
git commit -m "initial commit"
---
initial startup operator training issues with the Toe creation. 
trying to keep the WIRING.md up to date with details.

using ChatGPT to answer questions as i go thru, it does a fair job. 
Lots of my queestions though are because the initial diretions were unclear when faced 
with reality of the TouchDeisgner UI.

variety of changes to the pose_fantout.py to properly load landmarks etc

---
20 aug working thru tox 
realize the output of OnePerson Select CHOP would be the channels with p# stripped, and only have one person per the SelectPersonID
This may simplify the PoseEfx and the Landmark Select, as they only need to look for the landmark name/id
Perhaps the landmark channels should retain their base id in the name (eg 20_handtip_r = id_name)

chat kinda works but gets details wrong or left output
as building PoseEffect_MASTER COMP with internal LandmarkSelect COMP and fxCore etc
often  Chat's guide du jour gets basic architecture right but details wrong/left out
Such as details on how to add an Extension to a COMP
i repeatedly asked chat to elaborate or redo its plan doc, 
some of these are saved in ./docs/*.md

21 August
as I build these out, the question of the contents of the LandmarkSelectMenu looms
The menu is used in LandmarkSelect comp buried in each PoseEffect_MASTER
Current design was not really thinking of the replication/copy aspect
so i prompted:

the project root (poseCamTox_dev) is an example of the use of poseCamTox.  The PoseCam Comp reads the OSC/NDI and feeds them to the PoseEfxSwitch. That component has one or more PoseEffect instances (derived from PoseEffectMaster), and a switch interface that defines which PoseEffect is active and whose output TOP is streamed to its OutTop.  So perhaps the best location for the LandmarkFilterMenu_csv would be in PoseEfxSwitch Comp, which is the parent of all PoseEffect (including Master tox?).  Lets review the full architecture of this PoseEfxSwitch Comp with idea of a) being part of reusable Pose2Art architecture b) getting something done asap so we can build out a few PoseEffect_* with their specific fxCore. to demo the whole thing.

this kinda rearchitects the whole PoseEfxSwitch
so now have revised PoseEfxSwitch Architecture Rev 21 Aug
which gets updated now on rev c+.

as I go thru implementing by the guides, i note things that are odd and 
likely need updating, perhaps at higher level or lower in code/network.
I'll try to keep the Architecture doc up to date but like need an as-built pass
---
4pm 21 aug... almost have it but apparently the parameters are incorrect

---
getting vscode hooked up to touchDesigner
per Chat instructions

chat said to set DAT preferences Text Editor to
code --reuse-window --goto "$path:$line"
i tried and failed with :
C:/Users/isdal/AppData/Local/Programs/Microsoft VS Code/Code.exe --reuse-window --goto "$path:$line"
original was 
C:/Users/isdal/AppData/Local/Programs/Microsoft VS Code/Code.exe

just set it back
---
almost there 730p
---
23 Aug,  didnt finish last nite. 
Realized there are a few architectural things before I actually implment Dots (although initial code for that was provided by ChatGPT)

*) add expose_params Table DAT in PoseEffectMaster;s fxCore. It defines what Custome Parameters of fxCore are for UI and EfxSwitch to find initial contents:
	UiLandmarkFilter	All
	DisplayName	MASTER

*) add parameter DisplayName to PoseEffectMaster/fxCore, promote it for the UI and have EfxSwitch use this when building menu

write up a stepByStep guide to implementing  (note actual names may have different case)
- expose_params in PoseEffectMaster/fxCore (default contents: {UiDisplayName,  "Master"}, {UiLandmarkFilter, "All"} ); use it in EfxSwitch when building the menu and UI panel. 
- show the UIBuilder code that walks the effects object, collecting PoseEffect menu items; uiBuilder should also invoke PoseEfxSwitch.RebuiltEffectsMenu.  The param values in Master/fxCore should be noted and if the clone has those values, then auto-derive the UiDisplayName from the op name.
- creating Dots effect by cloning MASTER and making changes to params and ops inside, esp fxCore.  I have code for fxCore_Dots_landmark_to_instances.py ;  three expose_params (ColorType, Color, DotSize, LandmarkFilterType) for fxCore or the parent PoseEffect_clone
- copy that effect so there are two Dots with different starting params named in menu with default name
sent that to Chat and got back what is in "Step-by-step 23Aug 4p.md" into which i will make notes as things changes

---
ok i followed directions in 5pm doc 
oh wait, i didnt build the UIBuilder stuff
but running the toe i dont see messages.  maybe exit and restart
gotta do it anyway as its time to go be social
---
ok, enough with Chat and Architecture refactors
back to using print() and debug() to trace actions and Debug
---
ahh to get paramexec to trigger, it needs to point at the parent properly, and the Parameters field should be * to trigger on all parameters

moved all the build notes from docs to docs/Build Notes
later we can clean these out completely, so only exist in the git repo not on disk

not sure wtf is going on with the instructions for Dots, so went back to old OSC_Dots.toe 
Copied its important stuff into a container, then copied that container into PoseCamTox_Dev's PoseEffect_Dots/fxCore
it is different approach, no SOP just a stream of xyz points w/number points.
so will need to adjust design.
---
got it working!! although because of diffence between PoseCam in uv(0-1) and TD Render in normalizedDeviceCoord ndc(-1,1)

Caveat with Variable names... There are lots of styles for naming variables (Parameters) in the software world.
CamelCase aka TitleCase is readable and just alpha chars
variable_name is one of the preferred Python styles
Parametername is how TD creates and names Custom Parameters

To flip the Dots (right side up to match image) Chat said to put an Expression CHOP after the shuffle_landmarks (tx,ty,tz)
with the expression
(me.inputVal *2)-1
(me.inputs[0]['tx'] *2)-1
((1 - me.inputVal) * 2) - 1

but these dont work well.
it also talked about using a MathChop in that position.

AARRRGGGHHH first thing after creating a PoseEffectMASTER clone -> disable fxCore cloning
open the new clone (PoseEffect_Dots)
select the fxCore inside it
on the Common Parameters page, turn off Enable Cloning

otherwise you will lose all your fxCore changes when you exit and reload!

When the dev setup is running. PoseCamPC can be left in background. If you want to stop cooking in TD (distracting, etc) simply stop the video.  Note this will also stop both NDI and OSC output.  Someday we go back to PoseCamPC and have single Start/Stop that does all 3.

Oy, person_router is broken now.  and for some reason it says we are getting 104+ channels every frame!
go back to poseCamPC and log how many emitted per frame

ok. PoseCam working right. 106 channels is 33*3 + meta data
added debug in person_router that does logging to file.
so we need to remove any *.log files from git

now testing if Enable Clone off really preserve contents of fxCore in _dots

NO.. you need to set the Immune Flag, which is the 2nd icon down on left side of the op's display window (just to right of the input connectors).

ok so the whole of the previous plan for cloning is boloxed.
The CustomParameters on the clone'd PoseEffect_* get wiped out by the cloning process. only those that exist on the MASTER remain after restart.

The fxCore will be clone immune, so we could put a Text DAT in there called ensure_fx_pars(). it will go thru the custom parameters we know we want (eg UiColor, UiColorType, Uidotsize) and insure both the fxCore (the TextDat's parent) and the PoseEffect_ xx have correct custom parameters.  

---
26 Aug 2025

So with what we now know about Clones and Immunity, the prior design for exposing UI and setting the LandmarkFilter, and other Parameters in PoseEffect_ and its fxCore, needs to be completely rethought.

The immune fxCore is where all the info should be kept. The junk in the PoseEfxSwitch and PoseEffectMASTER ext, init, and other scripts needs to be excised and revised.

However, we need to get Dots working all the way thru, using the internal Parameter controls (fixed dotsize, name, landmark_filter (all), color, etc) of the fxCore to make it work.  Dont worry about Bound/clone stuff.
mark CloneMaster of PoseEffect_Dots Clone Immune for now. (may need disconnct its Clone Master parameter)

Landmark Filter should be set to pass thru for now.
No need to support multiple until we get Dots working.

Get the Dots working, and overlayed on ndi image for verification
shows my dots vs PoseCamPC dots in ndi image, they should be exact match

Hmm, marking _Dots clone immune thows an error about that.
turn off Immunity, delete Clone Master turn off Enable External .tox
Disable Cloning

an error is about the issues around onStart() and onCreate()
which call the PoseEffectMasterExt.py onStart() perhaps incorrectly
this may be source of the Clone Loop too.
---

ok cleared errors (was a bad char in script)
now back to re-building _Dots/fxCore
---
12:20p  it works but fx inverted
got the _Dots/fxCore working and at top added proper composite/switch stuff to allow app to overlay or just show fxRendered stream.

now go figure why it is upside down and wrong scale

--- 
oscin test .toe doesnt work - too crude, needs update
Osc_TrackHands changed to poseOsc_TrackHands so it all start with pose...

copy the PoseCamTox_Dev osc_in to the others so they all work on latest output of PoseCamPC

test renamed to poseOSCInTest.toe, copied in from Tox_Dev
it works. other old examples dont work due to more downstream errors

side note on whole Pose2Art...
there is a MediaPipe plugin for TD that is pretty sweet.
https://github.com/torinmb/mediapipe-touchdesigner
several good tutorials on how to use it
like these

https://www.youtube.com/watch?v=Cx4Ellaj6kk
https://www.youtube.com/watch?v=7o960C7nXSY
https://www.youtube.com/watch?v=xFAaDeRJGcc

lets get dots working then review where we are

